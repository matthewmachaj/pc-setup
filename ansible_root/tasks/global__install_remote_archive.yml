#-------------------------------------------------------------------------------
# HOW TO USE:
#
# - name: Install binary from remote archive
#   include_tasks:
#     file: global__install_remote_archive.yml
#   # Example loop variable:
#   loop:
#     - name: bitwarden
#       version: 1.21.1
#       url: https://github.com/bitwarden/cli/releases/download/v1.21.1/bw-linux-1.21.1.zip
#       filename: bw-linux-1.21.1.zip
#       install_dir: /usr/local/bin
#       install_filename: bw
#       # Path to binary within the archive (`./<binary>` - means it is in the root dir of the
#       # archive and will be deposited directly in whatever directory it is extracted to)
#       binary_path: ./bw
#
#-------------------------------------------------------------------------------
- block:
    - name: global (remote_archive) | Download archive file w/ checksum ({{ item.name }}-{{item.version }})
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ common__downloads_dir }}/{{ item.filename }}"
        checksum: "{{ item.checksum }}"
      when: item.checksum is defined and item.checksum != ""

    - name: global (remote_archive) | Download archive file w/o checksum ({{ item.name }}-{{item.version }})
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ common__downloads_dir }}/{{ item.filename }}"
      when: item.checksum is not defined or item.checksum == ""

    - name: global (remote_archive) | Extract archive to /tmp ({{ item.name }}-{{item.version }})
      ansible.builtin.unarchive:
        src: "{{ common__downloads_dir }}/{{ item.filename }}"
        dest: /tmp
        remote_src: yes
      args:
        creates: /tmp/{{ item.binary_path }}

    - name: global (remote_archive) | Install versioned copy of binary ({{ item.name }}-{{ item.version }}) to ansible bin directory
      become: yes
      become_user: root
      ansible.builtin.copy:
        src: /tmp/{{ item.binary_path }}
        dest: "{{ common__bin_dir }}/{{ item.name }}-{{ item.version }}"
        mode: '0755'
        remote_src: yes

    - name: global (remote_archive) | Symlink versioned copy of binary to be main one ({{ item.name }}-{{ item.version }})
      become: yes
      become_user: root
      ansible.builtin.file:
        state: link
        src: "{{ common__bin_dir }}/{{ item.name }}-{{ item.version }}"
        dest: "{{ item.install_dir }}/{{ item.name }}"
        owner: root
        group: root
      when: item.install_filename is not defined or item.install_filename == ""

    - name: global (remote_archive) | Symlink versioned copy of binary to be main one ({{ item.name }}-{{ item.version }}) w/ custom binary filename
      become: yes
      become_user: root
      ansible.builtin.file:
        state: link
        src: "{{ common__bin_dir }}/{{ item.name }}-{{ item.version }}"
        dest: "{{ item.install_dir }}/{{ item.install_filename }}"
        owner: root
        group: root
      when: item.install_filename is defined and item.install_filename != ""
  tags:
    - remote_archives
