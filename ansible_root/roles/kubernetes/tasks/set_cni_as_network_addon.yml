---
- name: Make directory for CNI reference plugin binaries
  become: yes
  file:
    state: directory
    dest: /opt/cni/bin
    owner: root
    group: root
    mode: '0755'

# NOTE: these binaries seem to already be installed via the kubernetes-cni package
- name: Download & install CNI reference plugins
  become: yes
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz
    dest: /opt/cni/bin
    remote_src: yes
    creates: /opt/cni/bin/bridge

#-------------------------------------------------------------------------------
# In order for master nodes to consider themselves to have had their container
# runtime's network add-on successfully activated (and thus have themselves
# appear as "Ready"), it seems that all you need to do is (a) create the
# /etc/cni/net.d directory, and then (b) restart the kubelet service
#-------------------------------------------------------------------------------
- name: Create CNI config file directory
  become: yes
  file:
    state: directory
    dest: /etc/cni/net.d
    owner: root
    group: root
    mode: '0755'
  notify: kubelet_restart

- name: Setup default CNI loopback configuration
  become: yes
  copy:
    src: 99-loopback.conf
    dest: /etc/cni/net.d/99-loopback.conf
    owner: root
    group: root
    mode: '0644'
  notify: kubelet_restart
  when: k8s_is_worker

- name: Setup bridge CNI interface configuration
  become: yes
  template:
    src: 10-bridge.conf.j2
    dest: /etc/cni/net.d/10-bridge.conf
    owner: root
    group: root
    mode: '0644'
  notify: kubelet_restart
  when: k8s_is_worker
