---
#-------------------------------------------------------------------------------
# HOW TO USE:
#
# - name: Install binary from remote archive
#   include_role:
#     name: packages
#     tasks_from: install_remote_archive.yml
#   vars:
#     pkg_archive_name: "{{ item.name }}"
#     pkg_archive_version: "{{ item.version }}"
#     pkg_archive_url: "{{ item.url }}"
#     pkg_archive_filename: "{{ item.filename }}"
#     pkg_archive_checksum: "{{ item.checksum | default('') }}"
#     pkg_archive_binary_path: "{{ item.binary }}"
#     pkg_archive_install_dir: "{{ item.install_dir }}"
#   loop: "{{ LIST_OF_REMOTE_ARCHIVES }}"
#
#-------------------------------------------------------------------------------
- name: Download archive file w/ checksum ({{ pkg_archive_name }}-{{pkg_archive_version }})
  ansible.builtin.get_url:
    url: "{{ pkg_archive_url }}"
    dest: "{{ common__downloads_dir }}/{{ pkg_archive_filename }}"
    checksum: "{{ pkg_archive_checksum }}"
  when: pkg_archive_checksum is defined and pkg_archive_checksum != ""

- name: Download archive file w/o checksum ({{ pkg_archive_name }}-{{pkg_archive_version }})
  ansible.builtin.get_url:
    url: "{{ pkg_archive_url }}"
    dest: "{{ common__downloads_dir }}/{{ pkg_archive_filename }}"
  when: pkg_archive_checksum is not defined or pkg_archive_checksum == ""

- name: Extract archive to /tmp ({{ pkg_archive_name }}-{{pkg_archive_version }})
  ansible.builtin.unarchive:
    src: "{{ common__downloads_dir }}/{{ pkg_archive_filename }}"
    dest: /tmp
    remote_src: yes
  args:
    creates: /tmp/{{ pkg_archive_binary_path }}

- name: Install versioned copy of binary ({{ pkg_archive_name }}-{{ pkg_archive_version }}) to ansible bin directory
  become: yes
  become_user: root
  ansible.builtin.copy:
    src: /tmp/{{ pkg_archive_binary_path }}
    dest: "{{ pkg_archive_install_dir }}/{{ pkg_archive_name }}-{{ pkg_archive_version }}"
    dest: "{{ common__bin_dir }}/{{ pkg_archive_name }}-{{ pkg_archive_version }}"
    mode: '0755'
    remote_src: yes

- name: Symlink versioned copy of binary to be main one ({{ pkg_archive_name }}-{{ pkg_archive_version }})
  become: yes
  become_user: root
  ansible.builtin.file:
    state: link
    src: "{{ common__bin_dir }}/{{ pkg_archive_name }}-{{ pkg_archive_version }}"
    dest: "{{ pkg_archive_install_dir }}/{{ pkg_archive_name }}"
    owner: root
    group: root
